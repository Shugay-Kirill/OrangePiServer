package handlersTelegramBot

import (
	"fmt"

	"telegramBot/models"
)

func (h *MessageHandler) HandleStartCommand(update models.Update) {
	message := update.Message
	response := fmt.Sprintf(`üéâ <b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, %s!</b>

ü§ñ <b>–Ø - —É–º–Ω—ã–π Telegram –±–æ—Ç —Å —Ä–∞–∑–ª–∏—á–Ω—ã–º–∏ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—è–º–∏</b>

‚ú® <b>–û—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
‚Ä¢ /help - –ø–æ–ª—É—á–∏—Ç—å –ø–æ–º–æ—â—å
‚Ä¢ /features - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞  
‚Ä¢ /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ

üõ†Ô∏è <b>–ß—Ç–æ —è —É–º–µ—é:</b>
‚úÖ –û—Ç–≤–µ—á–∞—Ç—å –≤ —Ç–æ–º –∂–µ —Ç–æ–ø–∏–∫–µ/—Ä–∞–∑–¥–µ–ª–µ
‚úÖ –†–∞–±–æ—Ç–∞—Ç—å –≤ –≥—Ä—É–ø–ø–∞—Ö –∏ –ª–∏—á–Ω—ã—Ö —Å–æ–æ–±—â–µ–Ω–∏—è—Ö
‚úÖ –ü—Ä–æ–≤–µ—Ä—è—Ç—å —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–∏ –∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã
‚úÖ –û–ø—Ä–µ–¥–µ–ª—è—Ç—å JPG –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è
‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å –¥–µ—Ç–∞–ª—å–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
‚úÖ –ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –≤—ã–≤–æ–¥ –ª–æ–≥–æ–≤ API

‚öôÔ∏è <b>–ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è:</b>
‚Ä¢ –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞ API: <b>%d —Å–∏–º–≤–æ–ª–æ–≤</b>

üìä <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —Å–æ–æ–±—â–µ–Ω–∏–∏:</b>
‚Ä¢ üë§ –í–∞—à–µ –∏–º—è: <b>%s</b>
‚Ä¢ üÜî –í–∞—à ID: <code>%d</code>
‚Ä¢ üí¨ ID —á–∞—Ç–∞: <code>%d</code>
‚Ä¢ üè∑Ô∏è ID —Ç–æ–ø–∏–∫–∞: <code>%d</code>`,
		message.From.FirstName,
		h.Config.MaxLengthAPIOutput,
		message.From.FirstName,
		message.From.ID,
		message.Chat.ID,
		message.MessageThreadID,
	)

	h.SendMessage(message.Chat.ID, message.MessageThreadID, response)
}

func (h *MessageHandler) HandleHelpCommand(update models.Update) {
	message := update.Message
	response := fmt.Sprintf(`üÜò <b>–ü–æ–º–æ—â—å –ø–æ –±–æ—Ç—É</b>

üìö <b>–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:</b>
‚Ä¢ /start - –Ω–∞—á–∞—Ç—å —Ä–∞–±–æ—Ç—É —Å –±–æ—Ç–æ–º
‚Ä¢ /help - –ø–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É
‚Ä¢ /features - –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞
‚Ä¢ /info - –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Ç–µ–∫—É—â–µ–º —á–∞—Ç–µ

‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏:</b>
‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞ API: <b>%d —Å–∏–º–≤–æ–ª–æ–≤</b>`,
		h.Config.MaxLengthAPIOutput,
	)

	h.SendMessage(message.Chat.ID, message.MessageThreadID, response)
}

func (h *MessageHandler) HandleFeaturesCommand(update models.Update) {
	message := update.Message
	response := fmt.Sprintf(`üöÄ <b>–í–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏ –±–æ—Ç–∞</b>

üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç–∏:</b>
‚Ä¢ <b>–ù–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º—ã–π –≤—ã–≤–æ–¥ API</b> - –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ –ª–æ–≥–æ–≤: <b>%d —Å–∏–º–≤–æ–ª–æ–≤</b>

‚öôÔ∏è <b>–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏:</b>
‚Ä¢ MAX_LENGTH_MESSEGE_API - –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ –≤—ã–≤–æ–¥–∞ API (—Ç–µ–∫—É—â–µ–µ –∑–Ω–∞—á–µ–Ω–∏–µ: %d)`,
		h.Config.MaxLengthAPIOutput,
		h.Config.MaxLengthAPIOutput,
	)

	h.SendMessage(message.Chat.ID, message.MessageThreadID, response)
}

func (h *MessageHandler) HandleInfoCommand(update models.Update) {
	message := update.Message

	chatType := "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π"
	switch message.Chat.Type {
	case "private":
		chatType = "üí¨ –õ–∏—á–Ω—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è"
	case "group":
		chatType = "üë• –ì—Ä—É–ø–ø–∞"
	case "supergroup":
		chatType = "üåü –°—É–ø–µ—Ä–≥—Ä—É–ø–ø–∞"
	case "channel":
		chatType = "üì¢ –ö–∞–Ω–∞–ª"
	}

	topicStatus := "‚ùå –ù–µ—Ç (–æ—Å–Ω–æ–≤–Ω–æ–π —á–∞—Ç)"
	if message.MessageThreadID != 0 {
		topicStatus = fmt.Sprintf("‚úÖ –î–∞ (ID: %d)", message.MessageThreadID)
	}

	response := fmt.Sprintf(`‚ÑπÔ∏è <b>–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —á–∞—Ç–µ</b>

üìã <b>–û—Å–Ω–æ–≤–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ üí¨ –¢–∏–ø —á–∞—Ç–∞: <b>%s</b>
‚Ä¢ üè∑Ô∏è –ù–∞–∑–≤–∞–Ω–∏–µ: <b>%s</b>
‚Ä¢ üÜî ID —á–∞—Ç–∞: <code>%d</code>
‚Ä¢ üè∑Ô∏è –¢–æ–ø–∏–∫: %s

üîß <b>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è:</b>
‚Ä¢ –ú–∞–∫—Å. –¥–ª–∏–Ω–∞ API –ª–æ–≥–æ–≤: <b>%d —Å–∏–º–≤–æ–ª–æ–≤</b>`,
		chatType,
		h.getChatTitle(message.Chat),
		message.Chat.ID,
		topicStatus,
		h.Config.MaxLengthAPIOutput,
	)

	h.SendMessage(message.Chat.ID, message.MessageThreadID, response)
}
